// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: partner_api2.proto

package com.emporiaenergy.partnerapi2;

public interface EVChargerSettingsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:emporiaenergy.partner_api_2.EVChargerSettings)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * identifies this device 
   * </pre>
   *
   * <code>string manufacturer_device_id = 1;</code>
   * @return The manufacturerDeviceId.
   */
  java.lang.String getManufacturerDeviceId();
  /**
   * <pre>
   * identifies this device 
   * </pre>
   *
   * <code>string manufacturer_device_id = 1;</code>
   * @return The bytes for manufacturerDeviceId.
   */
  com.google.protobuf.ByteString
      getManufacturerDeviceIdBytes();

  /**
   * <pre>
   * Is the charger set to charge?
   * </pre>
   *
   * <code>.google.protobuf.BoolValue on = 2;</code>
   * @return Whether the on field is set.
   */
  boolean hasOn();
  /**
   * <pre>
   * Is the charger set to charge?
   * </pre>
   *
   * <code>.google.protobuf.BoolValue on = 2;</code>
   * @return The on.
   */
  com.google.protobuf.BoolValue getOn();
  /**
   * <pre>
   * Is the charger set to charge?
   * </pre>
   *
   * <code>.google.protobuf.BoolValue on = 2;</code>
   */
  com.google.protobuf.BoolValueOrBuilder getOnOrBuilder();

  /**
   * <pre>
   * must be between 6 and the max_charge_rate_amps (inclusive)
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value charge_rate_amps = 3;</code>
   * @return Whether the chargeRateAmps field is set.
   */
  boolean hasChargeRateAmps();
  /**
   * <pre>
   * must be between 6 and the max_charge_rate_amps (inclusive)
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value charge_rate_amps = 3;</code>
   * @return The chargeRateAmps.
   */
  com.google.protobuf.UInt32Value getChargeRateAmps();
  /**
   * <pre>
   * must be between 6 and the max_charge_rate_amps (inclusive)
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value charge_rate_amps = 3;</code>
   */
  com.google.protobuf.UInt32ValueOrBuilder getChargeRateAmpsOrBuilder();
}
