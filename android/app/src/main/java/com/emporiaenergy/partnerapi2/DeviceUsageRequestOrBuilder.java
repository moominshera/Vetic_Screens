// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: partner_api2.proto

package com.emporiaenergy.partnerapi2;

public interface DeviceUsageRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:emporiaenergy.partner_api_2.DeviceUsageRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string auth_token = 1;</code>
   * @return The authToken.
   */
  java.lang.String getAuthToken();
  /**
   * <code>string auth_token = 1;</code>
   * @return The bytes for authToken.
   */
  com.google.protobuf.ByteString
      getAuthTokenBytes();

  /**
   * <pre>
   * start and end are specified as seconds since epoch (January 1, 1970) in the UTC timezone.
   * </pre>
   *
   * <code>uint64 start_epoch_seconds = 2;</code>
   * @return The startEpochSeconds.
   */
  long getStartEpochSeconds();

  /**
   * <code>uint64 end_epoch_seconds = 3;</code>
   * @return The endEpochSeconds.
   */
  long getEndEpochSeconds();

  /**
   * <pre>
   * What resolution data should be fetched?  
   * </pre>
   *
   * <code>.emporiaenergy.partner_api_2.DataResolution scale = 4;</code>
   * @return The enum numeric value on the wire for scale.
   */
  int getScaleValue();
  /**
   * <pre>
   * What resolution data should be fetched?  
   * </pre>
   *
   * <code>.emporiaenergy.partner_api_2.DataResolution scale = 4;</code>
   * @return The scale.
   */
  com.emporiaenergy.partnerapi2.DataResolution getScale();

  /**
   * <pre>
   * which channels of data should be fetched?
   * </pre>
   *
   * <code>.emporiaenergy.partner_api_2.DeviceUsageRequest.UsageChannel channels = 5;</code>
   * @return The enum numeric value on the wire for channels.
   */
  int getChannelsValue();
  /**
   * <pre>
   * which channels of data should be fetched?
   * </pre>
   *
   * <code>.emporiaenergy.partner_api_2.DeviceUsageRequest.UsageChannel channels = 5;</code>
   * @return The channels.
   */
  com.emporiaenergy.partnerapi2.DeviceUsageRequest.UsageChannel getChannels();

  /**
   * <pre>
   * If empty, return usage for all devices associated with partner
   * if not empty, limit the returned devices to the specified MDIs
   * </pre>
   *
   * <code>repeated string manufacturer_device_ids = 6;</code>
   * @return A list containing the manufacturerDeviceIds.
   */
  java.util.List<java.lang.String>
      getManufacturerDeviceIdsList();
  /**
   * <pre>
   * If empty, return usage for all devices associated with partner
   * if not empty, limit the returned devices to the specified MDIs
   * </pre>
   *
   * <code>repeated string manufacturer_device_ids = 6;</code>
   * @return The count of manufacturerDeviceIds.
   */
  int getManufacturerDeviceIdsCount();
  /**
   * <pre>
   * If empty, return usage for all devices associated with partner
   * if not empty, limit the returned devices to the specified MDIs
   * </pre>
   *
   * <code>repeated string manufacturer_device_ids = 6;</code>
   * @param index The index of the element to return.
   * @return The manufacturerDeviceIds at the given index.
   */
  java.lang.String getManufacturerDeviceIds(int index);
  /**
   * <pre>
   * If empty, return usage for all devices associated with partner
   * if not empty, limit the returned devices to the specified MDIs
   * </pre>
   *
   * <code>repeated string manufacturer_device_ids = 6;</code>
   * @param index The index of the value to return.
   * @return The bytes of the manufacturerDeviceIds at the given index.
   */
  com.google.protobuf.ByteString
      getManufacturerDeviceIdsBytes(int index);
}
